# Generated by Django 5.2 on 2025-04-27 19:56

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('cliente', 'Cliente'), ('entrenador', 'Entrenador'), ('nutricionista', 'Nutricionista')], default='cliente', max_length=20)),
                ('phone', models.CharField(max_length=20)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('muscle_mass', models.FloatField(blank=True, null=True)),
                ('name', models.CharField(max_length=30)),
                ('surname', models.CharField(max_length=30)),
                ('dni', models.CharField(max_length=9, unique=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('population', models.CharField(blank=True, max_length=50, null=True)),
                ('username', models.CharField(max_length=30, unique=True)),
                ('stature', models.FloatField(blank=True, null=True)),
                ('staff', models.BooleanField(default=False)),
                ('email', models.EmailField(max_length=50)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, null=True)),
                ('entrenador', models.ForeignKey(blank=True, limit_choices_to={'role': 'entrenador'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clientes_asignados', to=settings.AUTH_USER_MODEL, verbose_name='Entrenador asignado')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='customuser_groups', related_query_name='customuser', to='auth.group', verbose_name='groups')),
                ('nutricionista', models.ForeignKey(blank=True, limit_choices_to={'role': 'nutricionista'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pacientes_asignados', to=settings.AUTH_USER_MODEL, verbose_name='Nutricionista asignado')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_permissions', related_query_name='customuser', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('nutricionista', 'Nutricionista'), ('entrenador', 'Entrenador'), ('clase', 'Clase Dirigida')], max_length=20)),
                ('datetime', models.DateTimeField()),
                ('class_type', models.CharField(blank=True, max_length=20, null=True)),
                ('professional', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointments', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
